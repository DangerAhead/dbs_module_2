/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * result.java
 *
 * Created on 17 May, 2020, 2:27:38 PM
 */

package test;

import java.util.*;
import java.lang.*;
import javax.swing.JOptionPane;

/**
 *
 * @author DELL
 */
public class Main extends javax.swing.JFrame {

    /** Creates new form result */
    public Main() {
        initComponents();
        makeDirLookup();
        ta.setEditable(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */


    public static int global_depth=2;
    public static directory_lookup list =new directory_lookup();
    public static All_data data_log = new All_data();
    int arr[] = new int[1000];
    int arr_in=0;


    public static int intLen(int n)
    {
        if(n==0)
            return 1;

        int cnt=0;
        while(n>0)
        {
            n/=10;
            cnt++;
        }
        return cnt;
    }




    public static int decToBinary(int n)
    {
        int[] rev_binary=new int[1000];

        int i = 0;
        while (n > 0)
        {
            rev_binary[i] = n % 2;
            n = n / 2;
            i++;
        }
        int ans=0;

        for(int j=0;j<i;j++)
            ans+=((int)Math.pow(10,j))*rev_binary[j];

        return ans;
    }

//    public static int[] globalDepthIncrease(int new_depth)
//    {
//        int size=(int)Math.pow(2,new_depth);
//        int[] dir_lookup=new int[size];
//
//        for(int i=0;i<size;i++)
//        {
//            int[] curr=decToBinary(i);
//            int val=0;
//            for(int j=0;j<new_depth;j++)
//            {
//                val+=curr[j]*Math.pow(10,j);
//            }
//            dir_lookup[i]=val;
//        }
//        return dir_lookup;
//    }

    public static int hash(int num)
    {
        return num%10;
    }

    public static void makeDirLookup()
    {
        int end=(int)Math.pow(2, global_depth);

        directory_lookup newlist =new directory_lookup();

        for(int i=0;i<end;i++)
            newlist.insert(decToBinary(i)%((int)Math.pow(10,global_depth)),newlist);

        list=newlist;

            Block.Node bucket1 = new Block.Node(1);
            Block.Node bucket2 = new Block.Node(0);

            bucket1.depth=1;
            bucket2.depth=1;

            directory_lookup.Node temp=Main.list.head;

            while(temp!=null)
            {
                if((temp.data)%10==1)
                    temp.block_ptr=bucket1;

                if((temp.data)%10==0)
                    temp.block_ptr=bucket2;

                temp=temp.next;
            }

    }

    public void main(int no)
    {
        Scanner sc = new Scanner(System.in);
        String str;

//        while(sc.hasNextLine())
//        {
//            str = sc.nextLine();
//
//            if(str.isEmpty())
//               break;
//
//            int num = Integer.parseInt(str);
//
//            System.out.println(str+" "+num);
//        }

        

        
            int num = no;
            data_log = All_data.insert(data_log, num);
            Block.Insert(num);

            All_data.Node temp=Main.data_log.head;
        while(temp!=null)
        {
            System.out.print(temp.data+" ");
            ta.setText(ta.getText()+temp.data+" ");
            temp=temp.next;
        }

        System.out.println();
        ta.setText(ta.getText()+"\n");
        directory_lookup.Node temp1=Main.list.head;

            while(temp1!=null)
            {
                int len=intLen(temp1.data);
                if(len<global_depth)
                {
                    int x=global_depth-len;
                    while(x>0)
                    {
                        System.out.print("0");
                        ta.setText(ta.getText()+"0");
                        x--;
                    }
                }

                    if(intLen(temp1.block_ptr.identifier)==temp1.block_ptr.depth)
                    {
                        System.out.print(temp1.data+"->"+temp1.block_ptr.identifier+"->");
                        ta.setText(ta.getText()+temp1.data+"->"+temp1.block_ptr.identifier+"->");
                        for(int i=0;i<Block.bfr;i++)
                        {
                            if(temp1.block_ptr.data[i]>-1)
                            {
                                System.out.print(temp1.block_ptr.data[i]+" ");
                                ta.setText(ta.getText()+temp1.block_ptr.data[i]+" ");
                            }
                        }
                    }
                    else
                    {
                        System.out.print(temp1.data+"->");
                        ta.setText(ta.getText()+temp1.data+"->");
                        int t=temp1.block_ptr.depth-intLen(temp1.block_ptr.identifier);
                        while(t>0)
                        {
                            System.out.print("0");
                            ta.setText(ta.getText()+"0");
                            t--;
                        }

                        System.out.print(temp1.block_ptr.identifier+"->");
                        ta.setText(ta.getText()+temp1.block_ptr.identifier+"->");

                        for(int i=0;i<Block.bfr;i++)
                        {
                            if(temp1.block_ptr.data[i]>-1)
                            {
                                System.out.print(temp1.block_ptr.data[i]+" ");
                                ta.setText(ta.getText()+temp1.block_ptr.data[i]+" ");
                            }
                        }

                    }


                temp1=temp1.next;
                System.out.println();
                ta.setText(ta.getText()+"\n");
            }
                System.out.println();
                ta.setText(ta.getText()+"\n");
        lb1.setText("Global Depth: "+global_depth);



    }






    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        t1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lb1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        ta.setBackground(new java.awt.Color(0, 153, 153));
        ta.setColumns(20);
        ta.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        ta.setForeground(new java.awt.Color(255, 255, 255));
        ta.setRows(5);
        jScrollPane1.setViewportView(ta);

        jButton1.setBackground(new java.awt.Color(0, 153, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Insert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        t1.setBackground(new java.awt.Color(153, 153, 153));
        t1.setFont(new java.awt.Font("Tahoma", 1, 14));
        t1.setBorder(null);
        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 36));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Extendible Hashing Scheme Simulation");

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter Key:");

        lb1.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        lb1.setForeground(new java.awt.Color(255, 255, 255));
        lb1.setText("Global Depth: ");

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 22)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("BFR: 3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(195, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(238, 238, 238)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(275, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(286, 286, 286)
                .addComponent(lb1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(304, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_t1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //System.out.println(global_depth);
        String number = t1.getText().toString();
        if(number.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Enter a valid number","No number found!",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            int num = Integer.parseInt(t1.getText());
            int flag=0;
            for(int i=0;i<arr_in;i++)
            {
                if(arr[i]==num)
                {
                    flag=1;
                    break;
                }
            }
            if(flag==0)
            {
                arr[arr_in]=num;
                arr_in++;
                t1.setText("");
                main(num);
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Enter a new number","Number already entered!",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb1;
    private javax.swing.JTextField t1;
    private javax.swing.JTextArea ta;
    // End of variables declaration//GEN-END:variables

}
